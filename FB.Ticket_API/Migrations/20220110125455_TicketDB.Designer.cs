// <auto-generated />
using System;
using FB.Ticket_API.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace FB.Ticket_API.Migrations
{
    [DbContext(typeof(FlightDBContext))]
    [Migration("20220110125455_TicketDB")]
    partial class TicketDB
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.13")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("FB.Ticket_API.Entities.FlightForTicket", b =>
                {
                    b.Property<int>("FlightNumber")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AirLine")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EndDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Flightname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("From_Place")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Intrument_Used")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MealType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NoOfRows")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("To_Place")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TotalBusinessClassSeats")
                        .HasColumnType("int");

                    b.Property<int>("TotalNonBusinessClassSeats")
                        .HasColumnType("int");

                    b.HasKey("FlightNumber");

                    b.ToTable("FlightForTicket");
                });

            modelBuilder.Entity("FB.Ticket_API.Entities.Ticket", b =>
                {
                    b.Property<string>("PNR")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("BookingStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FlightID")
                        .HasColumnType("int");

                    b.Property<int>("NoOfSeats")
                        .HasColumnType("int");

                    b.HasKey("PNR");

                    b.HasIndex("FlightID");

                    b.ToTable("Tickets");
                });

            modelBuilder.Entity("FB.Ticket_API.Entities.Ticket", b =>
                {
                    b.HasOne("FB.Ticket_API.Entities.FlightForTicket", "Flights")
                        .WithMany()
                        .HasForeignKey("FlightID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Flights");
                });
#pragma warning restore 612, 618
        }
    }
}
